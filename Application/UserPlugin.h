/*
    Программа может подключать пользовательские .js и .css файлы
    к любому .html-файлу генерируемому из .md-файла
*/


// Закомментируйте это, чтобы отключить поддержку пользовательских расширений
#define MY_PLUGIN_SYSTEM


#ifdef MY_PLUGIN_SYSTEM


#include <string>

// Данные, которые будут доступны в пользовательских js-скриптах
struct UserScriptData
{
    // Уровень вложенности каталога, в котором расположен текущий .md-файл.
    // Примечание: Для каждого .md-файла программа рекурсивно просматривает каталоги
    // вверх по иерархии, начиная с каталога в котором расположен этот .md-файл.
    // Если в одном из каталогов будет найтена папка с названием PLUGIN_DIR_NAME,
    // то этот каталог будет считаться корневым.
    // Для всех дочерних директорий уровень вложенности будет отсчитываться
    // начиная с этого корневого каталога (сам корневой каталог имеет
    // уровень вложенности 0).
    // Если корневой каталог не найден, то nestingLevel_ == -1.
    int nestingLevel_ = 0;

    // Полный путь к корневому каталогу, в котором находится папка PLUGIN_DIR_NAME.
    // Обязательно оканчивается на /
    std::string rootDir_;


    // Ищет корневой каталог и устанавливает все переменные
    void Init(const std::string& mdFilePath);

    // Найден ли корневой каталог
    bool IsRootFound() const { return nestingLevel_ != -1; }

    // Что будет добавлено в head генерируемого html
    std::string HeadAppend();

    // Что будет добавлено в body генерируемого html
    std::string BodyAppend();
};


#endif // ifdef MY_PLUGIN_SYSTEM